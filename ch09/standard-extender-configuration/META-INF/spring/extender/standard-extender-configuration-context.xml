<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- //////// taskExecutor //////// -->

	<!-- delegates to JDK 1.5 ThreadPoolExecutor -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="15" />
		<property name="keepAliveSeconds" value="30" />
		<property name="threadNamePrefix" value="CustomSpringOsgiExtenderThread-" />
	</bean>
	
	<!-- for JDK 1.4, change bean's id -->
	<bean id="backportTaskExecutor" class="org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="15" />
		<property name="keepAliveSeconds" value="30" />
		<property name="threadGroupName" value="CustomSpringOsgiExtenderThread-" />
	</bean>


	<!-- //////// extenderProperties //////// -->
	
	<util:properties id="extenderProperties">
		<prop key="shutdown.wait.time">20000</prop>
		<prop key="process.annotations">true</prop>
		<prop key="dependencies.wait.time">60000</prop>
	</util:properties>
		
		
	<!-- //////// applicationEventMulticaster //////// -->
	
	<bean id="osgiApplicationEventMulticaster" class="org.springframework.osgi.context.event.OsgiBundleApplicationContextEventMulticasterAdapter" destroy-method="removeAllListeners">
		<constructor-arg ref="simpleApplicationEventMulticaster" />
	</bean>
	
	<bean id="simpleApplicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster">
		<property name="taskExecutor">
			<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
				<property name="corePoolSize" value="5" />
				<property name="threadNamePrefix" value="OsgiEventMultiCaster-" />
			</bean>
		</property>
	</bean>
	
	<!-- //////// applicationContextCreator //////// -->
	<!-- this app context creator does a very simple filtering  -->
<!--	<bean id="applicationContextCreator" class="org.springframework.osgi.extender.support.ConditionalApplicationContextCreator">-->
<!--		<property name="filter">-->
<!--			<bean class="com.manning.sdmia.ch09.stdextenderconf.ManningBundleContextFilter" />-->
<!--		</property>-->
<!--	</bean>-->
	
	<!-- just override configuration scanner -->
	<bean id="applicationContextCreator" class="org.springframework.osgi.extender.support.DefaultOsgiApplicationContextCreator">
		<property name="configurationScanner">
			<bean class="com.manning.sdmia.ch09.stdextenderconf.ManningConfigurationScanner" />
		</property>
	</bean>
	
	<!-- //////// osgi bean factory post-processor //////// -->
	<bean id="beanFactoryPostProcessor" class="com.manning.sdmia.ch09.stdextenderconf.LoggingOsgiBeanFactoryPostProcessor" />

	<osgi:service ref="beanFactoryPostProcessor" interface="org.springframework.osgi.extender.OsgiBeanFactoryPostProcessor" />
	
	
	<!-- //////// osgi bundle app. context listeners //////// -->
	
	<bean id="osgiApplicationContextListener" class="com.manning.sdmia.ch09.stdextenderconf.ConsoleApplicationContextListener" />

</beans>
