package com.manning.sdmia.web.jsf;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;

public class CCLFilter implements Filter {

	public void destroy() {
		// TODO Auto-generated method stub
		
	}

	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain chain) throws IOException, ServletException {
		String requestURI = ((HttpServletRequest)request).getRequestURI();
		System.out.println("######################################");
		System.out.println("requestURI = "+requestURI);
		if (!requestURI.endsWith(".jsf") && !requestURI.endsWith(".faces")) {
			ClassLoader oldCL = Thread.currentThread().getContextClassLoader();
			List<ClassLoader> cls = new ArrayList<ClassLoader>();
			cls.add(CCLFilter.class.getClassLoader());
			SmartClassLoader scl = new SmartClassLoader(oldCL, cls);
			testClasses(scl);
			try {
				//Thread.currentThread().setContextClassLoader(CCLFilter.class.getClassLoader());
				Thread.currentThread().setContextClassLoader(scl);
				chain.doFilter(request, response);
			} finally {
				Thread.currentThread().setContextClassLoader(oldCL);
			}
		} else {
			chain.doFilter(request, response);
		}
	}

	private void testClasses(SmartClassLoader scl) {
		System.out.println("> testClasses");
		try {
			Class.forName("org.apache.el.ExpressionFactoryImpl", true, scl);
			System.out.println("Class org.apache.el.ExpressionFactoryImpl loaded!");
		} catch (ClassNotFoundException e) {
			System.out.println("Failed to load class org.apache.el.ExpressionFactoryImpl!");
		}
	}

	public void init(FilterConfig arg0) throws ServletException {
		// TODO Auto-generated method stub
		
	}

}
